/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kierjohn.testgui;

import com.kierjohn.testgui.APIHandler;
import java.awt.*;
import java.io.File;
import java.io.FilenameFilter;
import java.io.IOException;
import java.nio.file.Files;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.*;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author LENOVO
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        reviewers = new ArrayList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        mainMenuPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        gotoQuizGame = new javax.swing.JButton();
        gotoReviewerCreation = new javax.swing.JButton();
        gotoGameSaves = new javax.swing.JButton();
        gotoReviewers = new javax.swing.JButton();
        gotoExport = new javax.swing.JButton();
        gotoSettings = new javax.swing.JButton();
        gotoAbout = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        featuresPanel = new javax.swing.JPanel();
        headerPanel = new javax.swing.JPanel();
        gotoMain = new javax.swing.JButton();
        featureTitleLabel = new javax.swing.JLabel();
        contentPanel = new javax.swing.JPanel();
        quizSetupPanel = new javax.swing.JPanel();
        playGameBtn = new javax.swing.JButton();
        quizModePanel = new javax.swing.JPanel();
        autoGeneratedQuizPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        qDiffInput = new javax.swing.JComboBox<>();
        qCatInput = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        qAmountInput = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        qTypeInput = new javax.swing.JComboBox<>();
        reviewerQuiz = new javax.swing.JPanel();
        quizReviewerComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        playReviewerToggle = new javax.swing.JToggleButton();
        notificationLabel = new javax.swing.JLabel();
        quizMainPanel = new javax.swing.JPanel();
        quizPanel = new com.kierjohn.testgui.QuizPanel();
        confirmPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        quizGotoMainConfirmNoBtn = new javax.swing.JButton();
        quizGotoMainConfirmYesBtn = new javax.swing.JButton();
        reviewerCreationPanel1 = new com.kierjohn.testgui.ReviewerEditorPanel();
        settingsPanel = new javax.swing.JPanel();
        saveSettingsBtn = new javax.swing.JButton();
        restoreDefaultSettingsBtn = new javax.swing.JButton();
        setReviewerSavesDirBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        reviewerSavesDirLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        gameSavesDirLabel = new javax.swing.JLabel();
        setGameSavesDirBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quizzard");
        setBackground(new java.awt.Color(106, 49, 144));
        setBounds(new java.awt.Rectangle(0, 0, 1280, 720));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setName("mainFrame"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 720));

        mainPanel.setPreferredSize(new java.awt.Dimension(1280, 720));
        mainPanel.setLayout(new java.awt.CardLayout());

        mainMenuPanel.setBackground(new java.awt.Color(106, 49, 144));
        mainMenuPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        mainMenuPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        jLabel9.setFont(new java.awt.Font("DejaVu Sans", 1, 75)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(250, 242, 249));
        jLabel9.setText("QUIZZARD");

        gotoQuizGame.setBackground(new java.awt.Color(255, 255, 51));
        gotoQuizGame.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        gotoQuizGame.setForeground(new java.awt.Color(102, 0, 102));
        gotoQuizGame.setText("New Game");
        gotoQuizGame.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        gotoQuizGame.setDefaultCapable(false);
        gotoQuizGame.setFocusPainted(false);
        gotoQuizGame.setFocusable(false);
        gotoQuizGame.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gotoQuizGame.setName("playQuizBtn"); // NOI18N
        gotoQuizGame.setPreferredSize(new java.awt.Dimension(300, 75));
        gotoQuizGame.setRequestFocusEnabled(false);
        gotoQuizGame.setRolloverEnabled(false);
        gotoQuizGame.setVerifyInputWhenFocusTarget(false);
        gotoQuizGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoQuizGameActionPerformed(evt);
            }
        });

        gotoReviewerCreation.setBackground(new java.awt.Color(255, 255, 51));
        gotoReviewerCreation.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        gotoReviewerCreation.setForeground(new java.awt.Color(102, 0, 102));
        gotoReviewerCreation.setText("Create Reviewer");
        gotoReviewerCreation.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        gotoReviewerCreation.setDefaultCapable(false);
        gotoReviewerCreation.setFocusPainted(false);
        gotoReviewerCreation.setFocusable(false);
        gotoReviewerCreation.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gotoReviewerCreation.setName("playQuizBtn"); // NOI18N
        gotoReviewerCreation.setPreferredSize(new java.awt.Dimension(300, 75));
        gotoReviewerCreation.setRequestFocusEnabled(false);
        gotoReviewerCreation.setRolloverEnabled(false);
        gotoReviewerCreation.setVerifyInputWhenFocusTarget(false);
        gotoReviewerCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoReviewerCreationActionPerformed(evt);
            }
        });

        gotoGameSaves.setBackground(new java.awt.Color(255, 255, 51));
        gotoGameSaves.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        gotoGameSaves.setForeground(new java.awt.Color(102, 0, 102));
        gotoGameSaves.setText("Game Saves");
        gotoGameSaves.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        gotoGameSaves.setDefaultCapable(false);
        gotoGameSaves.setFocusPainted(false);
        gotoGameSaves.setFocusable(false);
        gotoGameSaves.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gotoGameSaves.setName("playQuizBtn"); // NOI18N
        gotoGameSaves.setPreferredSize(new java.awt.Dimension(300, 75));
        gotoGameSaves.setRequestFocusEnabled(false);
        gotoGameSaves.setRolloverEnabled(false);
        gotoGameSaves.setVerifyInputWhenFocusTarget(false);
        gotoGameSaves.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoGameSavesActionPerformed(evt);
            }
        });

        gotoReviewers.setBackground(new java.awt.Color(255, 255, 51));
        gotoReviewers.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        gotoReviewers.setForeground(new java.awt.Color(102, 0, 102));
        gotoReviewers.setText("View Reviewers");
        gotoReviewers.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        gotoReviewers.setDefaultCapable(false);
        gotoReviewers.setFocusPainted(false);
        gotoReviewers.setFocusable(false);
        gotoReviewers.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gotoReviewers.setName("playQuizBtn"); // NOI18N
        gotoReviewers.setPreferredSize(new java.awt.Dimension(300, 75));
        gotoReviewers.setRequestFocusEnabled(false);
        gotoReviewers.setRolloverEnabled(false);
        gotoReviewers.setVerifyInputWhenFocusTarget(false);
        gotoReviewers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoReviewersActionPerformed(evt);
            }
        });

        gotoExport.setBackground(new java.awt.Color(255, 255, 51));
        gotoExport.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        gotoExport.setForeground(new java.awt.Color(102, 0, 102));
        gotoExport.setText("Export Save");
        gotoExport.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        gotoExport.setDefaultCapable(false);
        gotoExport.setFocusPainted(false);
        gotoExport.setFocusable(false);
        gotoExport.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gotoExport.setName("playQuizBtn"); // NOI18N
        gotoExport.setPreferredSize(new java.awt.Dimension(300, 75));
        gotoExport.setRequestFocusEnabled(false);
        gotoExport.setRolloverEnabled(false);
        gotoExport.setVerifyInputWhenFocusTarget(false);
        gotoExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoExportActionPerformed(evt);
            }
        });

        gotoSettings.setBackground(new java.awt.Color(255, 255, 51));
        gotoSettings.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        gotoSettings.setForeground(new java.awt.Color(102, 0, 102));
        gotoSettings.setText("Settings");
        gotoSettings.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        gotoSettings.setDefaultCapable(false);
        gotoSettings.setFocusPainted(false);
        gotoSettings.setFocusable(false);
        gotoSettings.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gotoSettings.setName("playQuizBtn"); // NOI18N
        gotoSettings.setPreferredSize(new java.awt.Dimension(300, 75));
        gotoSettings.setRequestFocusEnabled(false);
        gotoSettings.setRolloverEnabled(false);
        gotoSettings.setVerifyInputWhenFocusTarget(false);
        gotoSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoSettingsActionPerformed(evt);
            }
        });

        gotoAbout.setBackground(new java.awt.Color(255, 255, 51));
        gotoAbout.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        gotoAbout.setForeground(new java.awt.Color(102, 0, 102));
        gotoAbout.setText("About the Game");
        gotoAbout.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.gray));
        gotoAbout.setDefaultCapable(false);
        gotoAbout.setFocusPainted(false);
        gotoAbout.setFocusable(false);
        gotoAbout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        gotoAbout.setName("playQuizBtn"); // NOI18N
        gotoAbout.setPreferredSize(new java.awt.Dimension(300, 75));
        gotoAbout.setRequestFocusEnabled(false);
        gotoAbout.setRolloverEnabled(false);
        gotoAbout.setVerifyInputWhenFocusTarget(false);
        gotoAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoAboutActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon("C:\\Users\\LENOVO\\Documents\\NetBeansProjects\\Quizzard\\src\\main\\resources\\images\\2AC9FE1F-12AC-4512-81FB-7E27E3FFA957_out.png")); // NOI18N

        javax.swing.GroupLayout mainMenuPanelLayout = new javax.swing.GroupLayout(mainMenuPanel);
        mainMenuPanel.setLayout(mainMenuPanelLayout);
        mainMenuPanelLayout.setHorizontalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                                .addComponent(gotoQuizGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)
                                .addComponent(gotoReviewerCreation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gotoExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gotoGameSaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(52, 52, 52)
                                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(gotoReviewers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gotoSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(568, 568, 568)
                        .addComponent(jLabel3))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(415, 415, 415)
                        .addComponent(jLabel9))
                    .addGroup(mainMenuPanelLayout.createSequentialGroup()
                        .addGap(483, 483, 483)
                        .addComponent(gotoAbout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(319, Short.MAX_VALUE))
        );
        mainMenuPanelLayout.setVerticalGroup(
            mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainMenuPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addGap(37, 37, 37)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gotoQuizGame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gotoReviewerCreation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gotoGameSaves, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gotoReviewers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainMenuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gotoExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gotoSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(gotoAbout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        mainPanel.add(mainMenuPanel, "main menu");

        featuresPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        headerPanel.setBackground(new java.awt.Color(106, 49, 144));
        headerPanel.setPreferredSize(new java.awt.Dimension(1280, 75));

        gotoMain.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        gotoMain.setForeground(new java.awt.Color(255, 255, 255));
        gotoMain.setText("Main Menu");
        gotoMain.setBorder(null);
        gotoMain.setContentAreaFilled(false);
        gotoMain.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gotoMain.setFocusPainted(false);
        gotoMain.setFocusable(false);
        gotoMain.setName("playQuizBtn"); // NOI18N
        gotoMain.setPreferredSize(new java.awt.Dimension(128, 32));
        gotoMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoMainActionPerformed(evt);
            }
        });

        featureTitleLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 50)); // NOI18N
        featureTitleLabel.setForeground(new java.awt.Color(250, 242, 249));
        featureTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        featureTitleLabel.setText("Quizzer");
        featureTitleLabel.setFocusable(false);
        featureTitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(gotoMain, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(193, 193, 193)
                .addComponent(featureTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(380, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerPanelLayout.createSequentialGroup()
                .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(gotoMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(headerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(featureTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        contentPanel.setBackground(new java.awt.Color(106, 49, 144));
        contentPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        contentPanel.setMaximumSize(new java.awt.Dimension(1280, 720));
        contentPanel.setPreferredSize(new java.awt.Dimension(1280, 645));
        contentPanel.setLayout(new java.awt.CardLayout());

        quizSetupPanel.setBackground(new java.awt.Color(106, 49, 144));
        quizSetupPanel.setOpaque(false);
        quizSetupPanel.setPreferredSize(new java.awt.Dimension(1280, 645));

        playGameBtn.setBackground(new java.awt.Color(164,252,88));
        playGameBtn.setFont(new java.awt.Font("Inter", 1, 25)); // NOI18N
        playGameBtn.setText("Play Game");
        playGameBtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 255)));
        playGameBtn.setDefaultCapable(false);
        playGameBtn.setFocusPainted(false);
        playGameBtn.setName("playQuizBtn"); // NOI18N
        playGameBtn.setPreferredSize(new java.awt.Dimension(175, 75));
        playGameBtn.setRequestFocusEnabled(false);
        playGameBtn.setVerifyInputWhenFocusTarget(false);
        playGameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playGameBtnActionPerformed(evt);
            }
        });

        quizModePanel.setBackground(new java.awt.Color(106, 49, 144));
        quizModePanel.setLayout(new java.awt.CardLayout());

        autoGeneratedQuizPanel.setBackground(new java.awt.Color(106, 49, 144));

        jLabel1.setFont(new java.awt.Font("Inter", 1, 25)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(250, 242, 249));
        jLabel1.setText("Number of Questions");

        qDiffInput.setBackground(new java.awt.Color(255, 255, 255));
        qDiffInput.setFont(new java.awt.Font("Inter", 1, 16)); // NOI18N
        qDiffInput.setForeground(new java.awt.Color(0, 0, 153));
        qDiffInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Medium", "Hard" }));
        qDiffInput.setToolTipText("");
        qDiffInput.setBorder(null);
        qDiffInput.setFocusable(false);
        qDiffInput.setName("qDiff"); // NOI18N
        qDiffInput.setPreferredSize(new java.awt.Dimension(500, 50));
        qDiffInput.setRequestFocusEnabled(false);
        qDiffInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qDiffInputActionPerformed(evt);
            }
        });

        qCatInput.setBackground(new java.awt.Color(255, 255, 255));
        qCatInput.setFont(new java.awt.Font("Inter", 1, 16)); // NOI18N
        qCatInput.setForeground(new java.awt.Color(0, 0, 153));
        qCatInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General Knowledge", "Entertainment: Books", "Entertainment: Film", "Entertainment: Music", "Entertainment: Musicals & Theatres", "Entertainment: Television", "Entertainment: Video Games", "Entertainment: Board Games", "Science & Nature", "Science: Computers", "Science: Mathematics", "Mythology", "Sports", "Geography", "History", "Politics", "Art", "Celebrities", "Animals", "Vehicles", "Entertainment: Comics", "Science: Gadgets", "Entertainment: Japanese Anime & Manga", "Entertainment: Cartoon & Animations" }));
        qCatInput.setToolTipText("");
        qCatInput.setBorder(null);
        qCatInput.setFocusable(false);
        qCatInput.setName("qCat"); // NOI18N
        qCatInput.setPreferredSize(new java.awt.Dimension(500, 50));
        qCatInput.setRequestFocusEnabled(false);

        jLabel5.setFont(new java.awt.Font("Inter", 1, 25)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(250, 242, 249));
        jLabel5.setText("Question Type");

        jLabel6.setFont(new java.awt.Font("Inter", 1, 25)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(250, 242, 249));
        jLabel6.setText("Difficulty");

        qAmountInput.setFont(new java.awt.Font("Inter", 1, 16)); // NOI18N
        qAmountInput.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));
        qAmountInput.setToolTipText("");
        qAmountInput.setBorder(null);
        qAmountInput.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        qAmountInput.setFocusable(false);
        qAmountInput.setName("qAmount"); // NOI18N
        qAmountInput.setPreferredSize(new java.awt.Dimension(500, 50));
        qAmountInput.setRequestFocusEnabled(false);
        qAmountInput.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                qAmountInputMouseWheelMoved(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Inter", 1, 25)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(250, 242, 249));
        jLabel16.setText("Category");

        qTypeInput.setBackground(new java.awt.Color(255, 255, 255));
        qTypeInput.setFont(new java.awt.Font("Inter", 1, 16)); // NOI18N
        qTypeInput.setForeground(new java.awt.Color(0, 0, 153));
        qTypeInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Multiple Choice", "True or False" }));
        qTypeInput.setToolTipText("");
        qTypeInput.setBorder(null);
        qTypeInput.setFocusable(false);
        qTypeInput.setName("qDiff"); // NOI18N
        qTypeInput.setPreferredSize(new java.awt.Dimension(500, 50));
        qTypeInput.setRequestFocusEnabled(false);
        qTypeInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qTypeInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout autoGeneratedQuizPanelLayout = new javax.swing.GroupLayout(autoGeneratedQuizPanel);
        autoGeneratedQuizPanel.setLayout(autoGeneratedQuizPanelLayout);
        autoGeneratedQuizPanelLayout.setHorizontalGroup(
            autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(autoGeneratedQuizPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1))
                .addGap(62, 62, 62)
                .addGroup(autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(qTypeInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qDiffInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qAmountInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(qCatInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        autoGeneratedQuizPanelLayout.setVerticalGroup(
            autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(autoGeneratedQuizPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qDiffInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qTypeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qAmountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(autoGeneratedQuizPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(qCatInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        quizModePanel.add(autoGeneratedQuizPanel, "api quiz");

        reviewerQuiz.setBackground(new java.awt.Color(106, 49, 144));

        quizReviewerComboBox.setBackground(new java.awt.Color(255, 255, 255));
        quizReviewerComboBox.setFont(new java.awt.Font("Inter", 1, 50)); // NOI18N
        quizReviewerComboBox.setForeground(new java.awt.Color(0, 0, 153));
        quizReviewerComboBox.setToolTipText("");
        quizReviewerComboBox.setBorder(null);
        quizReviewerComboBox.setFocusable(false);
        quizReviewerComboBox.setName("qDiff"); // NOI18N
        quizReviewerComboBox.setPreferredSize(new java.awt.Dimension(500, 50));
        quizReviewerComboBox.setRequestFocusEnabled(false);
        quizReviewerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizReviewerComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Inter", 1, 32)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(250, 242, 249));
        jLabel8.setText("Select Reviewer:");

        javax.swing.GroupLayout reviewerQuizLayout = new javax.swing.GroupLayout(reviewerQuiz);
        reviewerQuiz.setLayout(reviewerQuizLayout);
        reviewerQuizLayout.setHorizontalGroup(
            reviewerQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reviewerQuizLayout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(reviewerQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(quizReviewerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(103, Short.MAX_VALUE))
        );
        reviewerQuizLayout.setVerticalGroup(
            reviewerQuizLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reviewerQuizLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(quizReviewerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        quizModePanel.add(reviewerQuiz, "reviewer quiz");

        playReviewerToggle.setBackground(new java.awt.Color(164,252,88));
        playReviewerToggle.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 12)); // NOI18N
        playReviewerToggle.setForeground(new java.awt.Color(51, 51, 51));
        playReviewerToggle.setText("Reviewers");
        playReviewerToggle.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        playReviewerToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playReviewerToggleActionPerformed(evt);
            }
        });

        notificationLabel.setFont(new java.awt.Font("Inter", 1, 16)); // NOI18N
        notificationLabel.setForeground(new java.awt.Color(250, 242, 249));
        notificationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        notificationLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout quizSetupPanelLayout = new javax.swing.GroupLayout(quizSetupPanel);
        quizSetupPanel.setLayout(quizSetupPanelLayout);
        quizSetupPanelLayout.setHorizontalGroup(
            quizSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quizSetupPanelLayout.createSequentialGroup()
                .addGroup(quizSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(quizSetupPanelLayout.createSequentialGroup()
                        .addGap(544, 544, 544)
                        .addComponent(playGameBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(quizSetupPanelLayout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(quizSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playReviewerToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quizModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(quizSetupPanelLayout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 937, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        quizSetupPanelLayout.setVerticalGroup(
            quizSetupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quizSetupPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(playReviewerToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(quizModePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(notificationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(playGameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        contentPanel.add(quizSetupPanel, "quizSetupCard");

        quizMainPanel.setBackground(new java.awt.Color(106, 49, 144));
        quizMainPanel.setPreferredSize(new java.awt.Dimension(1280, 620));
        quizMainPanel.setRequestFocusEnabled(false);
        quizMainPanel.setLayout(new java.awt.CardLayout());

        quizPanel.playGameBtn1.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayCard(contentPanel, "quizSetupCard");
            }
        });
        quizPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                quizPanelComponentShown(evt);
            }
        });
        quizMainPanel.add(quizPanel, "quizItem");

        confirmPanel.setBackground(new java.awt.Color(106, 49, 144));

        jLabel15.setBackground(new java.awt.Color(0, 51, 51));
        jLabel15.setFont(new java.awt.Font("Atkinson Hyperlegible", 1, 32)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Are you sure you want to quit?");

        quizGotoMainConfirmNoBtn.setBackground(new java.awt.Color(100, 100, 100));
        quizGotoMainConfirmNoBtn.setFont(new java.awt.Font("JetBrains Mono", 1, 16)); // NOI18N
        quizGotoMainConfirmNoBtn.setForeground(new java.awt.Color(255, 255, 255));
        quizGotoMainConfirmNoBtn.setText("No");
        quizGotoMainConfirmNoBtn.setBorder(null);
        quizGotoMainConfirmNoBtn.setName("playQuizBtn"); // NOI18N
        quizGotoMainConfirmNoBtn.setPreferredSize(new java.awt.Dimension(128, 32));
        quizGotoMainConfirmNoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizGotoMainConfirmNoBtnActionPerformed(evt);
            }
        });

        quizGotoMainConfirmYesBtn.setBackground(new java.awt.Color(100, 100, 100));
        quizGotoMainConfirmYesBtn.setFont(new java.awt.Font("JetBrains Mono", 1, 16)); // NOI18N
        quizGotoMainConfirmYesBtn.setForeground(new java.awt.Color(255, 255, 255));
        quizGotoMainConfirmYesBtn.setText("Yes");
        quizGotoMainConfirmYesBtn.setBorder(null);
        quizGotoMainConfirmYesBtn.setName("playQuizBtn"); // NOI18N
        quizGotoMainConfirmYesBtn.setPreferredSize(new java.awt.Dimension(128, 32));
        quizGotoMainConfirmYesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quizGotoMainConfirmYesBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout confirmPanelLayout = new javax.swing.GroupLayout(confirmPanel);
        confirmPanel.setLayout(confirmPanelLayout);
        confirmPanelLayout.setHorizontalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, confirmPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(confirmPanelLayout.createSequentialGroup()
                        .addComponent(quizGotoMainConfirmYesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quizGotoMainConfirmNoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(401, 401, 401))
        );
        confirmPanelLayout.setVerticalGroup(
            confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(confirmPanelLayout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel15)
                .addGap(95, 95, 95)
                .addGroup(confirmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quizGotoMainConfirmNoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quizGotoMainConfirmYesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        quizMainPanel.add(confirmPanel, "confirmQuit");

        contentPanel.add(quizMainPanel, "quizMainPanel");
        contentPanel.add(reviewerCreationPanel1, "quizCreationCard");

        settingsPanel.setBackground(new java.awt.Color(106, 49, 144));
        settingsPanel.setPreferredSize(new java.awt.Dimension(1280, 645));

        saveSettingsBtn.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 16)); // NOI18N
        saveSettingsBtn.setText("Save Settings");
        saveSettingsBtn.setName("playQuizBtn"); // NOI18N
        saveSettingsBtn.setPreferredSize(new java.awt.Dimension(128, 32));
        saveSettingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSettingsBtnActionPerformed(evt);
            }
        });

        restoreDefaultSettingsBtn.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 16)); // NOI18N
        restoreDefaultSettingsBtn.setText("Restore Defaults");
        restoreDefaultSettingsBtn.setName("playQuizBtn"); // NOI18N
        restoreDefaultSettingsBtn.setPreferredSize(new java.awt.Dimension(128, 32));
        restoreDefaultSettingsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restoreDefaultSettingsBtnActionPerformed(evt);
            }
        });

        setReviewerSavesDirBtn.setBackground(new java.awt.Color(106,49,144));
        setReviewerSavesDirBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/path1.png"))); // NOI18N
        setReviewerSavesDirBtn.setPreferredSize(new java.awt.Dimension(32, 32));
        setReviewerSavesDirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setReviewerSavesDirBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Reviewer Saves Destination");

        reviewerSavesDirLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 16)); // NOI18N
        reviewerSavesDirLabel.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Game Saves Destination");

        gameSavesDirLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 0, 16)); // NOI18N
        gameSavesDirLabel.setForeground(new java.awt.Color(255, 255, 255));

        setGameSavesDirBtn.setBackground(new java.awt.Color(106,49,144));
        setGameSavesDirBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/path1.png"))); // NOI18N
        setGameSavesDirBtn.setPreferredSize(new java.awt.Dimension(32, 32));
        setGameSavesDirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setGameSavesDirBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(saveSettingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(284, 284, 284)
                        .addComponent(restoreDefaultSettingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reviewerSavesDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(setReviewerSavesDirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(settingsPanelLayout.createSequentialGroup()
                        .addGap(239, 239, 239)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gameSavesDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(setGameSavesDirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(369, Short.MAX_VALUE))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(setReviewerSavesDirBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reviewerSavesDirLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(setGameSavesDirBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(gameSavesDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(200, 200, 200)
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveSettingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(restoreDefaultSettingsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(207, Short.MAX_VALUE))
        );

        contentPanel.add(settingsPanel, "settings");

        javax.swing.GroupLayout featuresPanelLayout = new javax.swing.GroupLayout(featuresPanel);
        featuresPanel.setLayout(featuresPanelLayout);
        featuresPanelLayout.setHorizontalGroup(
            featuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(featuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        featuresPanelLayout.setVerticalGroup(
            featuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(featuresPanelLayout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .addGap(0, 621, Short.MAX_VALUE))
            .addGroup(featuresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, featuresPanelLayout.createSequentialGroup()
                    .addGap(0, 75, Short.MAX_VALUE)
                    .addComponent(contentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        mainPanel.add(featuresPanel, "features");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void quizGotoMainConfirmYesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizGotoMainConfirmYesBtnActionPerformed
        mode = "main menu";
        displayCard(mainPanel, mode);
    }//GEN-LAST:event_quizGotoMainConfirmYesBtnActionPerformed

    private void quizGotoMainConfirmNoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizGotoMainConfirmNoBtnActionPerformed
        displayCard(quizMainPanel, "quizItem");
    }//GEN-LAST:event_quizGotoMainConfirmNoBtnActionPerformed

    private void gotoMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoMainActionPerformed
        if (!quizPanel.isFinished()) {
            displayCard(quizMainPanel, "confirmQuit");
        } else {
            mode = "main menu";
            displayCard(mainPanel, mode);
        }
    }//GEN-LAST:event_gotoMainActionPerformed


    private void gotoQuizGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoQuizGameActionPerformed
        notificationLabel.setText("");
        featureTitleLabel.setText("Quizzer");
        displayCard(mainPanel, "features");
        displayCard(contentPanel, "quizSetupCard");
    }//GEN-LAST:event_gotoQuizGameActionPerformed

    private void gotoReviewerCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoReviewerCreationActionPerformed
        featureTitleLabel.setText("Reviewer Creator");
        displayCard(mainPanel, "features");
        displayCard(contentPanel, "quizCreationCard");
        mode = "reviewer";
    }//GEN-LAST:event_gotoReviewerCreationActionPerformed

    private void gotoGameSavesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoGameSavesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gotoGameSavesActionPerformed

    private void gotoAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoAboutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gotoAboutActionPerformed

    private void gotoReviewersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoReviewersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gotoReviewersActionPerformed

    private void gotoExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoExportActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gotoExportActionPerformed

    private void gotoSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoSettingsActionPerformed
        mode = "settings";
        reviewerSavesDirLabel.setText(reviewerSavesDir.getAbsolutePath());
        gameSavesDirLabel.setText(gameSavesDir.getAbsolutePath());
        displayCard(mainPanel, "features");
        displayCard(contentPanel, mode);
    }//GEN-LAST:event_gotoSettingsActionPerformed

    private void saveSettingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSettingsBtnActionPerformed
        System.out.println("Successfully set the reviewer path to " + reviewerSavesDirLabel.getText());
        reviewerSavesDir = folderChooser.getSelectedFile();
    }//GEN-LAST:event_saveSettingsBtnActionPerformed

    private void restoreDefaultSettingsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreDefaultSettingsBtnActionPerformed
        reviewerSavesDirLabel.setText(reviewerSavesDir.getAbsolutePath());
    }//GEN-LAST:event_restoreDefaultSettingsBtnActionPerformed

    private void setReviewerSavesDirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setReviewerSavesDirBtnActionPerformed
        if (folderChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            folderChooser.setDialogTitle("Select which folder to save reviewers");
            reviewerSavesDirLabel.setText(folderChooser.getSelectedFile().getAbsolutePath());
        } else {
            System.out.println("Setting reviewer saves cancelled.");
        }
    }//GEN-LAST:event_setReviewerSavesDirBtnActionPerformed

    private void setGameSavesDirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setGameSavesDirBtnActionPerformed
        if (folderChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            folderChooser.setDialogTitle("Select which folder to save game history");
            gameSavesDir = folderChooser.getSelectedFile();
            gameSavesDirLabel.setText(gameSavesDir.getAbsolutePath());
        } else {
            System.out.println("Setting game saves cancelled.");
        }
    }//GEN-LAST:event_setGameSavesDirBtnActionPerformed

    private void playReviewerToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playReviewerToggleActionPerformed
        File[] jsonFiles = reviewerSavesDir.listFiles(new FilenameFilter() {
            @Override
            public boolean accept(File dir, String name) {
                return name.toLowerCase().endsWith(".json");
            }
        });


        if (playReviewerToggle.isSelected()) {
            System.out.println("Number of reviewers in " + reviewerSavesDir.toString() + ": " + jsonFiles.length);
            if (jsonFiles.length > 0) {
                String[] names = new String[jsonFiles.length];
                try {
                    for (int i = 0; i < jsonFiles.length; i++) {
                        File jsonFile = jsonFiles[i];
                        names[i] = jsonFile.getName();
                        String content = new String(Files.readAllBytes(jsonFile.toPath()));
                        reviewers.add(APIHandler.jsonObjectToQuiz(new JSONObject(content)));
                    }
                } catch (IOException | JSONException e) {
                    e.printStackTrace();
                }
                quizReviewerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
                displayCard(quizModePanel, "reviewer quiz");
            } else {
                playReviewerToggle.setSelected(false);
                notificationLabel.setText("You have no reviewers. Create one or load from files.");
            }
        } else {
            notificationLabel.setText("");
            displayCard(quizModePanel, "api quiz");
        }
//        int reviewersCount = reviewerCreationPanel1.quizzes.size();
//        if (playReviewerToggle.isSelected()) {
//            if (reviewersCount > 0) {
//                displayCard(quizModePanel, "reviewer quiz");
//                String[] names = new String[reviewersCount];
//                for (int i = 0; i < reviewersCount; i++) {
//                    Quiz quiz = reviewerCreationPanel1.quizzes.get(i);
//                    names[i] = quiz.getName();
//                }
//                quizReviewerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(names));
//            } else {
//                playReviewerToggle.setSelected(false);
//                notificationLabel.setText("You have no reviewers. Create one or load from files.");
//            }
//        } else {
//            notificationLabel.setText("");
//            displayCard(quizModePanel, "api quiz");
//        }
    }//GEN-LAST:event_playReviewerToggleActionPerformed

    private void quizReviewerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quizReviewerComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quizReviewerComboBoxActionPerformed

    private void qTypeInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qTypeInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qTypeInputActionPerformed

    private void qAmountInputMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_qAmountInputMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_qAmountInputMouseWheelMoved

    private void qDiffInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qDiffInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qDiffInputActionPerformed

    private void playGameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playGameBtnActionPerformed
        if (playReviewerToggle.isSelected()) {
            quizPanel.startQuiz(reviewers.get(quizReviewerComboBox.getSelectedIndex()));
        } else {
            try {
                quizPanel.startQuiz(generateQuiz());
            } catch (APIHandler.APIException ex) {
                notificationLabel.setText(ex.getMessage());
            } catch (ParseException ex) {
                notificationLabel.setText("Invalid question amount input.");
            }
        }
        mode = "quiz";
        displayCard(contentPanel, "quizMainPanel");
        displayCard(quizMainPanel, "quizItem");
    }//GEN-LAST:event_playGameBtnActionPerformed

    private void quizPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_quizPanelComponentShown
//        System.out.println(((JPanel) evt.getSource()).getAccessibleContext().getAccessibleName());
    }//GEN-LAST:event_quizPanelComponentShown

    private Quiz generateQuiz() throws APIHandler.APIException, ParseException {
        String qTypeInputStr = ((String) qTypeInput.getSelectedItem()).toLowerCase();
        String qType;
        switch (qTypeInputStr) {
            case "multiple choice" ->
                qType = "multiple";
            case "true or false" ->
                qType = "boolean";
            default ->
                qType = qTypeInputStr;
        }
        qAmountInput.commitEdit();
        APIHandler apiHandler = new APIHandler();
        String difficulty = (String) qDiffInput.getSelectedItem();
        while (true) {
            try {
                return apiHandler.callAPI(
                        (Integer) qAmountInput.getValue(),
                        qCatInput.getSelectedIndex() + 9,
                        difficulty.toLowerCase(),
                        qType
                );
            } catch (IOException e) {
                System.out.println(e.getMessage() + "\nRe-initializing game...\n");
            } catch (APIHandler.APIMaxAttemptsException e) {
                throw e;
            }
        }
    }

    private void displayCard(Container container, String cardName) {
        CardLayout card = (CardLayout) container.getLayout();
        card.show(container, cardName);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainFrame frame = new MainFrame();
                frame.setVisible(true);
                frame.setLocationRelativeTo(null);
                folderChooser = new JFileChooser();
                File defaultDir = folderChooser.getFileSystemView().getDefaultDirectory();
                reviewerSavesDir = defaultDir;
                gameSavesDir = defaultDir;
                folderChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            }
        });
    }

    private ArrayList<Quiz> getReviewerQuiz() {
        return reviewerCreationPanel1.quizzes;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel autoGeneratedQuizPanel;
    private javax.swing.JPanel confirmPanel;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel featureTitleLabel;
    private javax.swing.JPanel featuresPanel;
    private javax.swing.JLabel gameSavesDirLabel;
    private javax.swing.JButton gotoAbout;
    private javax.swing.JButton gotoExport;
    private javax.swing.JButton gotoGameSaves;
    private javax.swing.JButton gotoMain;
    private javax.swing.JButton gotoQuizGame;
    private javax.swing.JButton gotoReviewerCreation;
    private javax.swing.JButton gotoReviewers;
    private javax.swing.JButton gotoSettings;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel mainMenuPanel;
    protected javax.swing.JPanel mainPanel;
    private javax.swing.JLabel notificationLabel;
    private javax.swing.JButton playGameBtn;
    private javax.swing.JToggleButton playReviewerToggle;
    private javax.swing.JSpinner qAmountInput;
    private javax.swing.JComboBox<String> qCatInput;
    private javax.swing.JComboBox<String> qDiffInput;
    private javax.swing.JComboBox<String> qTypeInput;
    private javax.swing.JButton quizGotoMainConfirmNoBtn;
    private javax.swing.JButton quizGotoMainConfirmYesBtn;
    private javax.swing.JPanel quizMainPanel;
    private javax.swing.JPanel quizModePanel;
    private com.kierjohn.testgui.QuizPanel quizPanel;
    private javax.swing.JComboBox<String> quizReviewerComboBox;
    private javax.swing.JPanel quizSetupPanel;
    private javax.swing.JButton restoreDefaultSettingsBtn;
    private com.kierjohn.testgui.ReviewerEditorPanel reviewerCreationPanel1;
    private javax.swing.JPanel reviewerQuiz;
    private javax.swing.JLabel reviewerSavesDirLabel;
    private javax.swing.JButton saveSettingsBtn;
    private javax.swing.JButton setGameSavesDirBtn;
    private javax.swing.JButton setReviewerSavesDirBtn;
    private javax.swing.JPanel settingsPanel;
    // End of variables declaration//GEN-END:variables

    // custom code variables    
    protected ArrayList<Quiz> reviewers;
    private String mode = "main menu";
    static private JFileChooser folderChooser;
    static protected File reviewerSavesDir, gameSavesDir;
}
