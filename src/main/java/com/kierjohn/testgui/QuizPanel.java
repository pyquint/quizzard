/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.kierjohn.testgui;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Container;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.Timer;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

/**
 *
 * @author LENOVO /**
 *
 * @author LENOVO
 */
public class QuizPanel extends javax.swing.JPanel {

    private Question currentQuestion;
    String currentChoice;
    Timer timer;

    /**
     * Creates new form QuestionPanel
     */
    public QuizPanel() {
        initComponents();
        QuizPanel a = this;
        timer = new Timer(1500, new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if (isFinished = index == currentQuiz.getQCount()) {
                    displayCard(a, "quiz finished card");
                } else {
                    currentQuestion = currentQuiz.getQuestionAtIndex(index);
                    displayCurrentQuestion();
                }
                resetInputComponents();
            }
        });
        timer.setRepeats(false);
    }

    private void startTimer() {
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quizGamePanel = new javax.swing.JPanel();
        inputPanel = new javax.swing.JPanel();
        multipleChoicePanel = new javax.swing.JPanel();
        choiceBtn1 = new javax.swing.JButton();
        choiceBtn2 = new javax.swing.JButton();
        choiceBtn3 = new javax.swing.JButton();
        choiceBtn4 = new javax.swing.JButton();
        trueOrFalsePanel = new javax.swing.JPanel();
        trueBtn = new javax.swing.JButton();
        falseBtn = new javax.swing.JButton();
        identificationPanel = new javax.swing.JPanel();
        identificationInputTxtFld = new javax.swing.JTextField();
        qPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionText = new javax.swing.JTextPane();
        categoryLabel = new javax.swing.JLabel();
        difficultyLabel = new javax.swing.JLabel();
        scoreLiteralLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();
        questionsLiteralLabel = new javax.swing.JLabel();
        questionCounterLabel = new javax.swing.JLabel();
        quizFinishedPanel = new javax.swing.JPanel();
        questionLabel1 = new javax.swing.JLabel();
        resultScoreCountLabel = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        resultCorrectAnswersLabel = new javax.swing.JLabel();
        playGameBtn1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(106, 49, 144));
        setPreferredSize(new java.awt.Dimension(1280, 620));
        setLayout(new java.awt.CardLayout());

        quizGamePanel.setBackground(new java.awt.Color(106, 49, 144));
        quizGamePanel.setPreferredSize(new java.awt.Dimension(1280, 620));

        inputPanel.setBackground(new java.awt.Color(51, 51, 51));
        inputPanel.setForeground(new java.awt.Color(255, 255, 255));
        inputPanel.setOpaque(false);
        inputPanel.setPreferredSize(new java.awt.Dimension(1280, 300));
        inputPanel.setRequestFocusEnabled(false);
        inputPanel.setLayout(new java.awt.CardLayout());

        multipleChoicePanel.setBackground(new java.awt.Color(106, 49, 144));
        multipleChoicePanel.setForeground(new java.awt.Color(255, 255, 255));
        multipleChoicePanel.setAutoscrolls(true);
        multipleChoicePanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        multipleChoicePanel.setPreferredSize(new java.awt.Dimension(964, 300));
        multipleChoicePanel.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        choiceBtn1.setBackground(colorDefault);
        choiceBtn1.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        choiceBtn1.setForeground(new java.awt.Color(29, 20, 101));
        choiceBtn1.setBorder(null);
        choiceBtn1.setBorderPainted(false);
        choiceBtn1.setDefaultCapable(false);
        choiceBtn1.setFocusPainted(false);
        choiceBtn1.setFocusable(false);
        choiceBtn1.setOpaque(true);
        choiceBtn1.setPreferredSize(new java.awt.Dimension(200, 125));
        choiceBtn1.setRequestFocusEnabled(false);
        choiceBtn1.setRolloverEnabled(false);
        choiceBtn1.setVerifyInputWhenFocusTarget(false);
        multipleChoicePanel.add(choiceBtn1);

        choiceBtn2.setBackground(colorDefault);
        choiceBtn2.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        choiceBtn2.setForeground(new java.awt.Color(29, 20, 101));
        choiceBtn2.setBorder(null);
        choiceBtn2.setBorderPainted(false);
        choiceBtn2.setDefaultCapable(false);
        choiceBtn2.setFocusPainted(false);
        choiceBtn2.setFocusable(false);
        choiceBtn2.setOpaque(true);
        choiceBtn2.setPreferredSize(new java.awt.Dimension(200, 125));
        choiceBtn2.setRequestFocusEnabled(false);
        choiceBtn2.setRolloverEnabled(false);
        choiceBtn2.setVerifyInputWhenFocusTarget(false);
        multipleChoicePanel.add(choiceBtn2);

        choiceBtn3.setBackground(colorDefault);
        choiceBtn3.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        choiceBtn3.setForeground(new java.awt.Color(29, 20, 101));
        choiceBtn3.setBorder(null);
        choiceBtn3.setBorderPainted(false);
        choiceBtn3.setDefaultCapable(false);
        choiceBtn3.setFocusPainted(false);
        choiceBtn3.setFocusable(false);
        choiceBtn3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        choiceBtn3.setOpaque(true);
        choiceBtn3.setPreferredSize(new java.awt.Dimension(200, 125));
        choiceBtn3.setRequestFocusEnabled(false);
        choiceBtn3.setRolloverEnabled(false);
        choiceBtn3.setVerifyInputWhenFocusTarget(false);
        multipleChoicePanel.add(choiceBtn3);

        choiceBtn4.setBackground(colorDefault);
        choiceBtn4.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        choiceBtn4.setForeground(new java.awt.Color(29, 20, 101));
        choiceBtn4.setBorder(null);
        choiceBtn4.setBorderPainted(false);
        choiceBtn4.setDefaultCapable(false);
        choiceBtn4.setFocusPainted(false);
        choiceBtn4.setFocusable(false);
        choiceBtn4.setOpaque(true);
        choiceBtn4.setPreferredSize(new java.awt.Dimension(200, 125));
        choiceBtn4.setRequestFocusEnabled(false);
        choiceBtn4.setRolloverEnabled(false);
        choiceBtn4.setVerifyInputWhenFocusTarget(false);
        multipleChoicePanel.add(choiceBtn4);

        inputBtns = new JButton[] {choiceBtn1, choiceBtn2, choiceBtn3, choiceBtn4};

        inputPanel.add(multipleChoicePanel, "multiple");

        trueOrFalsePanel.setBackground(new java.awt.Color(106, 49, 144));
        trueOrFalsePanel.setForeground(new java.awt.Color(255, 255, 255));
        trueOrFalsePanel.setPreferredSize(new java.awt.Dimension(1280, 720));
        trueOrFalsePanel.setLayout(new java.awt.GridLayout(0, 2, 5, 0));

        trueBtn.setBackground(colorDefault);
        trueBtn.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 50)); // NOI18N
        trueBtn.setForeground(new java.awt.Color(29, 20, 101));
        trueBtn.setText("true");
        trueBtn.setBorder(null);
        trueBtn.setBorderPainted(false);
        trueBtn.setDefaultCapable(false);
        trueBtn.setFocusPainted(false);
        trueBtn.setFocusable(false);
        trueBtn.setPreferredSize(new java.awt.Dimension(200, 125));
        trueBtn.setRequestFocusEnabled(false);
        trueBtn.setRolloverEnabled(false);
        trueBtn.setVerifyInputWhenFocusTarget(false);
        trueOrFalsePanel.add(trueBtn);

        falseBtn.setBackground(colorDefault);
        falseBtn.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 50)); // NOI18N
        falseBtn.setForeground(new java.awt.Color(29, 20, 101));
        falseBtn.setText("false");
        falseBtn.setBorder(null);
        falseBtn.setBorderPainted(false);
        falseBtn.setDefaultCapable(false);
        falseBtn.setFocusPainted(false);
        falseBtn.setFocusable(false);
        falseBtn.setPreferredSize(new java.awt.Dimension(200, 125));
        falseBtn.setRequestFocusEnabled(false);
        falseBtn.setRolloverEnabled(false);
        falseBtn.setVerifyInputWhenFocusTarget(false);
        trueOrFalsePanel.add(falseBtn);
        falseBtn.getAccessibleContext().setAccessibleName("");

        inputPanel.add(trueOrFalsePanel, "boolean");

        identificationPanel.setBackground(new java.awt.Color(106, 49, 144));
        identificationPanel.setForeground(new java.awt.Color(255, 255, 255));
        identificationPanel.setPreferredSize(new java.awt.Dimension(1280, 720));

        identificationInputTxtFld.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 32)); // NOI18N
        identificationInputTxtFld.setForeground(new java.awt.Color(29, 20, 101));
        identificationInputTxtFld.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout identificationPanelLayout = new javax.swing.GroupLayout(identificationPanel);
        identificationPanel.setLayout(identificationPanelLayout);
        identificationPanelLayout.setHorizontalGroup(
            identificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(identificationPanelLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(identificationInputTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 882, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        identificationPanelLayout.setVerticalGroup(
            identificationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(identificationPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(identificationInputTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        inputPanel.add(identificationPanel, "identification");

        qPanel.setBackground(new java.awt.Color(29, 20, 101));

        jScrollPane2.setBorder(null);
        jScrollPane2.setFocusable(false);
        jScrollPane2.setRequestFocusEnabled(false);
        jScrollPane2.setVerifyInputWhenFocusTarget(false);

        questionText.setEditable(false);
        questionText.setBackground(new java.awt.Color(29, 20, 101));
        questionText.setBorder(null);
        questionText.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 32)); // NOI18N
        questionText.setForeground(new java.awt.Color(249, 193, 5));
        questionText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        questionText.setFocusCycleRoot(false);
        questionText.setFocusable(false);
        questionText.setRequestFocusEnabled(false);
        questionText.setVerifyInputWhenFocusTarget(false);
        StyledDocument doc = questionText.getStyledDocument();
        SimpleAttributeSet center = new SimpleAttributeSet();
        StyleConstants.setAlignment(center, StyleConstants.ALIGN_CENTER);
        doc.setParagraphAttributes(0, doc.getLength(), center, false);
        jScrollPane2.setViewportView(questionText);

        categoryLabel.setBackground(new java.awt.Color(0, 51, 51));
        categoryLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 12)); // NOI18N
        categoryLabel.setForeground(new java.awt.Color(255, 255, 255));
        categoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        categoryLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        categoryLabel.setPreferredSize(new java.awt.Dimension(1, 16));

        difficultyLabel.setBackground(new java.awt.Color(0, 51, 51));
        difficultyLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 12)); // NOI18N
        difficultyLabel.setForeground(new java.awt.Color(255, 255, 255));
        difficultyLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        difficultyLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        difficultyLabel.setPreferredSize(new java.awt.Dimension(1, 16));

        scoreLiteralLabel.setBackground(new java.awt.Color(0, 51, 51));
        scoreLiteralLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 16)); // NOI18N
        scoreLiteralLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoreLiteralLabel.setText("Score");

        scoreLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 16)); // NOI18N
        scoreLabel.setForeground(new java.awt.Color(255, 255, 255));
        scoreLabel.setText("0");

        questionsLiteralLabel.setBackground(new java.awt.Color(0, 51, 51));
        questionsLiteralLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 16)); // NOI18N
        questionsLiteralLabel.setForeground(new java.awt.Color(255, 255, 255));
        questionsLiteralLabel.setText("Questions");
        questionsLiteralLabel.setFocusable(false);

        questionCounterLabel.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 16)); // NOI18N
        questionCounterLabel.setForeground(new java.awt.Color(255, 255, 255));

        addQPanelButtonActionPerformed();

        javax.swing.GroupLayout qPanelLayout = new javax.swing.GroupLayout(qPanel);
        qPanel.setLayout(qPanelLayout);
        qPanelLayout.setHorizontalGroup(
            qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(qPanelLayout.createSequentialGroup()
                        .addGroup(qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(difficultyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(966, 966, 966)
                        .addGroup(qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scoreLabel)
                            .addGroup(qPanelLayout.createSequentialGroup()
                                .addGroup(qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(questionCounterLabel)
                                    .addComponent(questionsLiteralLabel))
                                .addGap(18, 18, 18)
                                .addComponent(scoreLiteralLabel)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        qPanelLayout.setVerticalGroup(
            qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(qPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(qPanelLayout.createSequentialGroup()
                        .addComponent(categoryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(difficultyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(qPanelLayout.createSequentialGroup()
                        .addGroup(qPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(qPanelLayout.createSequentialGroup()
                                .addComponent(questionsLiteralLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(qPanelLayout.createSequentialGroup()
                                .addComponent(scoreLiteralLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addComponent(scoreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(questionCounterLabel)
                        .addGap(38, 38, 38)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout quizGamePanelLayout = new javax.swing.GroupLayout(quizGamePanel);
        quizGamePanel.setLayout(quizGamePanelLayout);
        quizGamePanelLayout.setHorizontalGroup(
            quizGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1280, Short.MAX_VALUE)
            .addGroup(quizGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(quizGamePanelLayout.createSequentialGroup()
                    .addGap(93, 93, 93)
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1093, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(94, Short.MAX_VALUE)))
            .addGroup(quizGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(quizGamePanelLayout.createSequentialGroup()
                    .addGap(33, 33, 33)
                    .addComponent(qPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        quizGamePanelLayout.setVerticalGroup(
            quizGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
            .addGroup(quizGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(quizGamePanelLayout.createSequentialGroup()
                    .addGap(330, 330, 330)
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
            .addGroup(quizGamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(quizGamePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(qPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(305, Short.MAX_VALUE)))
        );

        add(quizGamePanel, "quiz game card");

        quizFinishedPanel.setBackground(new java.awt.Color(106, 49, 144));
        quizFinishedPanel.setPreferredSize(new java.awt.Dimension(1280, 645));

        questionLabel1.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 50)); // NOI18N
        questionLabel1.setForeground(new java.awt.Color(240, 240, 240));
        questionLabel1.setText("Quiz Result:");

        resultScoreCountLabel.setBackground(new java.awt.Color(0, 51, 51));
        resultScoreCountLabel.setFont(new java.awt.Font("Atkinson Hyperlegible", 1, 24)); // NOI18N
        resultScoreCountLabel.setForeground(new java.awt.Color(255, 255, 255));

        jLabel111.setBackground(new java.awt.Color(0, 51, 51));
        jLabel111.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        jLabel111.setForeground(new java.awt.Color(255, 255, 255));
        jLabel111.setText("Total Score:");

        jLabel112.setBackground(new java.awt.Color(0, 51, 51));
        jLabel112.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(255, 255, 255));
        jLabel112.setText("Correct Answers:");

        resultCorrectAnswersLabel.setBackground(new java.awt.Color(0, 51, 51));
        resultCorrectAnswersLabel.setFont(new java.awt.Font("Atkinson Hyperlegible", 1, 24)); // NOI18N
        resultCorrectAnswersLabel.setForeground(new java.awt.Color(255, 255, 255));

        playGameBtn1.setFont(new java.awt.Font("DejaVu Sans Condensed", 1, 25)); // NOI18N
        playGameBtn1.setText("New Game");
        playGameBtn1.setName("playQuizBtn"); // NOI18N
        playGameBtn1.setPreferredSize(new java.awt.Dimension(128, 32));
        playGameBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playGameBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout quizFinishedPanelLayout = new javax.swing.GroupLayout(quizFinishedPanel);
        quizFinishedPanel.setLayout(quizFinishedPanelLayout);
        quizFinishedPanelLayout.setHorizontalGroup(
            quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quizFinishedPanelLayout.createSequentialGroup()
                .addGroup(quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(quizFinishedPanelLayout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addGroup(quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(quizFinishedPanelLayout.createSequentialGroup()
                                .addGroup(quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quizFinishedPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel112)
                                        .addGap(18, 18, 18))
                                    .addGroup(quizFinishedPanelLayout.createSequentialGroup()
                                        .addGap(55, 55, 55)
                                        .addComponent(jLabel111)
                                        .addGap(28, 28, 28)))
                                .addGroup(quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(resultCorrectAnswersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(resultScoreCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(quizFinishedPanelLayout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(questionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(quizFinishedPanelLayout.createSequentialGroup()
                        .addGap(541, 541, 541)
                        .addComponent(playGameBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        quizFinishedPanelLayout.setVerticalGroup(
            quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quizFinishedPanelLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(questionLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addGroup(quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultCorrectAnswersLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel112, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(46, 46, 46)
                .addGroup(quizFinishedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel111)
                    .addComponent(resultScoreCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addComponent(playGameBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(quizFinishedPanel, "quiz finished card");
        quizFinishedPanel.getAccessibleContext().setAccessibleName("quizFinished");
    }// </editor-fold>//GEN-END:initComponents

    private void playGameBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playGameBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playGameBtn1ActionPerformed

//    // adding custom button event handler should be ran BEFORE adding own event handlers
//    protected void addActionListenerToInput(java.awt.event.ActionListener evtl) {
//        for (JButton inputBtn : getAllButtons()) {
//            inputBtn.addActionListener(evtl);
//        }
//        identificationInputTxtFld.addActionListener(evtl);
//    }
    // should be ran AFTER adding custom event handlers
    private void addQPanelButtonActionPerformed() {
        for (JButton inputBtn : getAllButtons()) {
            inputBtn.addActionListener((java.awt.event.ActionEvent evt) -> {
                choiceButtonActionPerformed(evt);
            });
        }
        identificationInputTxtFld.addActionListener((java.awt.event.ActionEvent evt) -> {
            choiceButtonActionPerformed(evt);
        });
    }

    protected void startQuiz(Quiz quiz) {
        displayCard(this, "quiz game card");
        currentQuiz = quiz;
        index = 0;
        isFinished = false;
        questionCounterLabel.setText(index + 1 + "/" + currentQuiz.getQCount());
        currentQuestion = currentQuiz.getQuestionAtIndex(index);
        displayCurrentQuestion();
    }

    private void choiceButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if (choiceIsCorrect()) {
            currentScore += 10;
            correctAnswerCount++;
        }
        inputComponent = (JComponent) evt.getSource();
        if (currentQuestion.getType().equals("identification")) {
            currentChoice = identificationInputTxtFld.getText();
            identificationInputTxtFld.setEnabled(false);
        } else {
            for (JButton btn : getAllButtons()) {
                btn.setEnabled(false);
            }
            if (currentQuestion.getType().equals("boolean")) {
                correctChoiceBtn = (currentQuestion.isCorrect("true")) ? trueBtn : falseBtn;
            }
            currentChoice = ((JButton) inputComponent).getText();
            correctChoiceBtn.setBackground(colorCorrect);
        }
        inputComponent.setBackground((choiceIsCorrect()) ? colorCorrect : colorWrong);
        index++;
        startTimer();
        scoreLabel.setText(currentScore + "");
    }

    protected boolean isFinished() {
        return isFinished;
    }

    private void resetInputComponents() {
        identificationInputTxtFld.setBackground(Color.WHITE);
        identificationInputTxtFld.setEnabled(true);
        for (JButton button : getAllButtons()) {
            button.setEnabled(true);
            button.setBackground(colorDefault);
        }
    }

    protected void setCurrentQuestion(Question q) {
        currentQuestion = q;
    }

    protected boolean choiceIsCorrect() {
        return currentQuestion.isCorrect(currentChoice);
    }

    private void displayCurrentQuestion() {
        questionCounterLabel.setText(index + 1 + "/" + currentQuiz.getQCount());
        questionText.setText(currentQuestion.getQuestion());
        identificationInputTxtFld.setText("");
        if (currentQuestion.getType().equals("multiple")) {
            correctChoiceBtn = inputBtns[new Random().nextInt(4)];
            int wrongChoiceIndex = 0;
            for (JButton btn : inputBtns) {
                if (btn != correctChoiceBtn) {
                    String wrongChoice = currentQuestion.getWrongChoiceAtIndex(wrongChoiceIndex);
                    btn.setText(wrongChoice);
                    wrongChoiceIndex++;
                }
            }
            correctChoiceBtn.setText(currentQuestion.getAnswer());
        }
        displayCard(inputPanel, currentQuestion.getType());
    }

    private void displayCard(Container container, String cardName) {
        CardLayout card = (CardLayout) container.getLayout();
        card.show(container, cardName);
    }

    protected JButton[] getAllButtons() {
        return new JButton[]{choiceBtn1, choiceBtn2, choiceBtn3, choiceBtn4, trueBtn, falseBtn};
    }

    private void quizDisplayScoreAndCounter(boolean bool) {
        questionsLiteralLabel.setVisible(bool);
        questionCounterLabel.setVisible(bool);
        scoreLiteralLabel.setVisible(bool);
        scoreLabel.setVisible(bool);
    }

    private void quizDisplayDifficultyAndCategory(boolean bool) {
        difficultyLabel.setVisible(bool);
        categoryLabel.setVisible(bool);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JButton choiceBtn1;
    private javax.swing.JButton choiceBtn2;
    private javax.swing.JButton choiceBtn3;
    private javax.swing.JButton choiceBtn4;
    private javax.swing.JLabel difficultyLabel;
    private javax.swing.JButton falseBtn;
    private javax.swing.JTextField identificationInputTxtFld;
    private javax.swing.JPanel identificationPanel;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel multipleChoicePanel;
    protected javax.swing.JButton playGameBtn1;
    private javax.swing.JPanel qPanel;
    protected javax.swing.JLabel questionCounterLabel;
    private javax.swing.JLabel questionLabel1;
    private javax.swing.JTextPane questionText;
    private javax.swing.JLabel questionsLiteralLabel;
    private javax.swing.JPanel quizFinishedPanel;
    private javax.swing.JPanel quizGamePanel;
    private javax.swing.JLabel resultCorrectAnswersLabel;
    private javax.swing.JLabel resultScoreCountLabel;
    protected javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel scoreLiteralLabel;
    private javax.swing.JButton trueBtn;
    private javax.swing.JPanel trueOrFalsePanel;
    // End of variables declaration//GEN-END:variables
    private JButton correctChoiceBtn;
    private JButton[] inputBtns;
    private static java.awt.Color colorDefault = new Color(255, 255, 255);
    private static java.awt.Color colorCorrect = new Color(164, 252, 88);
    private static java.awt.Color colorWrong = new Color(253, 26, 26);
    private JComponent inputComponent;
    private int currentScore;
    private int correctAnswerCount;
    private Quiz currentQuiz;
    private int index;
    private boolean isFinished = true;

}
